(window.webpackJsonp=window.webpackJsonp||[]).push([[17],{309:function(t,e,a){"use strict";a.r(e);var r=a(22),n=Object(r.a)({},function(){var t=this,e=t.$createElement,a=t._self._c||e;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"视频"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#视频","aria-hidden":"true"}},[t._v("#")]),t._v(" 视频")]),t._v(" "),a("p",[a("router-link",{attrs:{to:"/5-subresources/"}},[t._v("🔝 页面静态资源")]),t._v(" | "),a("router-link",{attrs:{to:"/5-subresources/font.html"}},[t._v("🔙 上一站 - 字体")])],1),t._v(" "),a("p",[t._v("视频作为一种重要的媒体形态，在网站中使用可以提高网站内容的丰富性，但同时对网络加载来说也是一个负担。所以会出现一些如下针对 Web 上视频的优化。")]),t._v(" "),a("h2",{attrs:{id:"_1-使用合适的视频格式"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-使用合适的视频格式","aria-hidden":"true"}},[t._v("#")]),t._v(" 1. 使用合适的视频格式")]),t._v(" "),a("p",[t._v("与图片类似，不同的视频编码格式，其数据大小也大都不同。目前在 HTML5 Video 中常用的格式为 MPEG-4。除了 MPEG-4 之外，还支持一种叫 WebM 的新的视频格式。")]),t._v(" "),a("p",[t._v("WebM(VP9) 相较于 MPEG-4(x264) 来说会更小，不过"),a("a",{attrs:{href:"https://caniuse.com/#feat=webm",target:"_blank",rel:"noopener noreferrer"}},[t._v("兼容性相对来说也较差"),a("OutboundLink")],1),t._v("。因此可以考虑在 "),a("code",[t._v("<video>")]),t._v(" 中指定多个 "),a("code",[t._v("<source>")]),t._v("。")]),t._v(" "),a("div",{staticClass:"language-HTML line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-html"}},[a("code",[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("video")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("source")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("src")]),a("span",{pre:!0,attrs:{class:"token attr-value"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("/static/video/me.webm"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),t._v(" "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("type")]),a("span",{pre:!0,attrs:{class:"token attr-value"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("video/webm"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("source")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("src")]),a("span",{pre:!0,attrs:{class:"token attr-value"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("/static/video/me.mp4"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),t._v(" "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("type")]),a("span",{pre:!0,attrs:{class:"token attr-value"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("video/mp4"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("video")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br")])]),a("p",[t._v("此外，使用 "),a("a",{attrs:{href:"https://www.youtube.com/watch?v=04lXWMcwdXA",target:"_blank",rel:"noopener noreferrer"}},[t._v("AV1 编码"),a("OutboundLink")],1),a("sup",[t._v("[1]")]),t._v("会比 "),a("a",{attrs:{href:"https://youtu.be/reztLS3vomE?t=356",target:"_blank",rel:"noopener noreferrer"}},[t._v("VP9(WebM) 小约30%，比 x264(MPEG-4) 小约45-50%"),a("OutboundLink")],1),a("sup",[t._v("[2]")]),t._v("。")]),t._v(" "),a("h2",{attrs:{id:"_2-视频压缩"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-视频压缩","aria-hidden":"true"}},[t._v("#")]),t._v(" 2. 视频压缩")]),t._v(" "),a("p",[t._v("对于视频，我们也可以进行有损与无损压缩，同样可以有效减少视频大小。下面列举了一些常用的工具：")]),t._v(" "),a("ul",[a("li",[a("a",{attrs:{href:"https://handbrake.fr/",target:"_blank",rel:"noopener noreferrer"}},[t._v("HandBrake"),a("OutboundLink")],1)]),t._v(" "),a("li",[a("a",{attrs:{href:"https://www.freemake.com/free_video_converter/",target:"_blank",rel:"noopener noreferrer"}},[t._v("Freemake"),a("OutboundLink")],1)]),t._v(" "),a("li",[a("a",{attrs:{href:"http://www.selur.de/",target:"_blank",rel:"noopener noreferrer"}},[t._v("Hybrid"),a("OutboundLink")],1)]),t._v(" "),a("li",[a("a",{attrs:{href:"https://sourceforge.net/projects/megui/",target:"_blank",rel:"noopener noreferrer"}},[t._v("MeGUI"),a("OutboundLink")],1)])]),t._v(" "),a("h2",{attrs:{id:"_3-移除不必要的音轨信息"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-移除不必要的音轨信息","aria-hidden":"true"}},[t._v("#")]),t._v(" 3. 移除不必要的音轨信息")]),t._v(" "),a("p",[t._v("在上一节中我们提到，可以使用 "),a("code",[t._v("<video>")]),t._v(" 代替 GIF 来实现动画，同时体积也会更小。由于在这种场景下本身就是不需要声音的，所以我们会将 "),a("code",[t._v("<video>")]),t._v(" 设置为 "),a("code",[t._v("muted")]),t._v("。")]),t._v(" "),a("p",[t._v("那么，既然不需要声音，我们是不是可以直接移除掉音轨的数据？是的，这样做也会帮助进一步缩减视频的体积。")]),t._v(" "),a("h2",{attrs:{id:"_4-使用“流”"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4-使用“流”","aria-hidden":"true"}},[t._v("#")]),t._v(" 4. 使用“流”")]),t._v(" "),a("p",[t._v("尝试让浏览器使用“流”或者小分片的方式来播放你的视频，例如常用的 HLS (HTTP Live Streaming) 技术。简单来说，使用 HLS 技术，你的视频会包含一个 "),a("code",[t._v(".m3u8")]),t._v(" 的索引文件和一系列包含播放内容的 "),a("code",[t._v(".ts")]),t._v(" 分片。浏览器通过不断下载一小段的分片来进行视频播放，避免了完整视频下载的流量消耗。")]),t._v(" "),a("p",[t._v("你也可以尝试使用 "),a("a",{attrs:{href:"https://en.wikipedia.org/wiki/Dynamic_Adaptive_Streaming_over_HTTP",target:"_blank",rel:"noopener noreferrer"}},[t._v("MPEG-DASH"),a("OutboundLink")],1),a("sup",[t._v("[3]")]),t._v(" 这个技术，目前开源社区也有一个配套的"),a("a",{attrs:{href:"https://github.com/Dash-Industry-Forum/dash.js",target:"_blank",rel:"noopener noreferrer"}},[t._v("客户端实现"),a("OutboundLink")],1),t._v("。")]),t._v(" "),a("h2",{attrs:{id:"_5-移除不必要的视频"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_5-移除不必要的视频","aria-hidden":"true"}},[t._v("#")]),t._v(" 5. 移除不必要的视频")]),t._v(" "),a("p",[t._v("对于不需要使用视频的场景，最好的优化方法就是去掉视频。例如在小屏幕上，你可以通过媒体查询来避免下载视频：")]),t._v(" "),a("div",{staticClass:"language-CSS line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-css"}},[a("code",[a("span",{pre:!0,attrs:{class:"token atrule"}},[a("span",{pre:!0,attrs:{class:"token rule"}},[t._v("@media")]),t._v(" screen and "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("max-width")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 650px"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")])]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token selector"}},[t._v("#hero-video")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("display")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" none"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br")])]),a("hr"),t._v(" "),a("p",[t._v("关于视频的优化这里只介绍了一些基本的手段，但对于一个重度的视频网站来说，会包含例如播放器 SDK 的优化、数据预取、码率自适应等更多的优化内容，在 2019 GMTC 上，"),a("a",{attrs:{href:"https://static001.geekbang.org/con/42/pdf/3841774823/file/%E8%B0%AD%E5%85%86%E6%AD%86%E2%80%94GMTC%20B%E7%AB%99%E7%9A%84%E8%A7%86%E9%A2%91%E4%BD%93%E9%AA%8C%E8%BF%9B%E5%8C%96%E4%B9%8B%E8%B7%AF%20-%20bilibili%20.pdf",target:"_blank",rel:"noopener noreferrer"}},[t._v("B站分享了他们的缩减首帧耗时的一系列优化措施"),a("OutboundLink")],1),a("sup",[t._v("[4]")]),t._v("。所以这里算是一个抛砖引玉。")]),t._v(" "),a("p",[t._v("此外，虽然上面介绍了一些视频处理的软件工具，但是如果有更高的定制化或集成需求，建议使用 "),a("a",{attrs:{href:"https://www.ffmpeg.org/",target:"_blank",rel:"noopener noreferrer"}},[t._v("FFmpeg"),a("OutboundLink")],1),a("sup",[t._v("[5]")]),t._v(" 或其"),a("a",{attrs:{href:"https://github.com/FFmpeg/FFmpeg#libraries",target:"_blank",rel:"noopener noreferrer"}},[t._v("背后的这些包"),a("OutboundLink")],1),t._v("。")]),t._v(" "),a("p",[a("router-link",{attrs:{to:"/5-subresources/#本节告一段落"}},[t._v("🔝 页面静态资源")])],1),t._v(" "),a("hr"),t._v(" "),a("h2",{attrs:{id:"参考资料"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#参考资料","aria-hidden":"true"}},[t._v("#")]),t._v(" 参考资料")]),t._v(" "),a("ol",[a("li",[a("a",{attrs:{href:"https://www.youtube.com/watch?v=04lXWMcwdXA",target:"_blank",rel:"noopener noreferrer"}},[t._v("a technial overview of the AV1"),a("OutboundLink")],1)]),t._v(" "),a("li",[a("a",{attrs:{href:"https://youtu.be/reztLS3vomE?t=356",target:"_blank",rel:"noopener noreferrer"}},[t._v("Speed Essentials: Key Techniques for Fast Websites (Chrome Dev Summit 2018)"),a("OutboundLink")],1)]),t._v(" "),a("li",[a("a",{attrs:{href:"https://en.wikipedia.org/wiki/Dynamic_Adaptive_Streaming_over_HTTP",target:"_blank",rel:"noopener noreferrer"}},[t._v("Dynamic Adaptive Streaming over HTTP (Wikipedia)"),a("OutboundLink")],1)]),t._v(" "),a("li",[a("a",{attrs:{href:"https://static001.geekbang.org/con/42/pdf/3841774823/file/%E8%B0%AD%E5%85%86%E6%AD%86%E2%80%94GMTC%20B%E7%AB%99%E7%9A%84%E8%A7%86%E9%A2%91%E4%BD%93%E9%AA%8C%E8%BF%9B%E5%8C%96%E4%B9%8B%E8%B7%AF%20-%20bilibili%20.pdf",target:"_blank",rel:"noopener noreferrer"}},[t._v("B 站的视频体验进化之路"),a("OutboundLink")],1)]),t._v(" "),a("li",[a("a",{attrs:{href:"https://www.ffmpeg.org/",target:"_blank",rel:"noopener noreferrer"}},[t._v("FFmepg"),a("OutboundLink")],1)]),t._v(" "),a("li",[a("a",{attrs:{href:"https://www.keycdn.com/blog/video-optimization",target:"_blank",rel:"noopener noreferrer"}},[t._v("8 Video Optimization Tips for Faster Loading Times"),a("OutboundLink")],1)]),t._v(" "),a("li",[a("a",{attrs:{href:"https://rigor.com/blog/optimizing-mp4-video-for-fast-streaming",target:"_blank",rel:"noopener noreferrer"}},[t._v("Optimizing MP4 Video for Fast Streaming"),a("OutboundLink")],1)]),t._v(" "),a("li",[a("a",{attrs:{href:"https://blog.catchpoint.com/2017/06/16/web-performance-101-video-optimization/",target:"_blank",rel:"noopener noreferrer"}},[t._v("Web Performance 101: Video Optimization"),a("OutboundLink")],1)])])])},[],!1,null,null,null);e.default=n.exports}}]);