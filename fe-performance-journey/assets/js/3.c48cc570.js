(window.webpackJsonp=window.webpackJsonp||[]).push([[3],{289:function(t,a,s){t.exports=s.p+"assets/img/gzip1.51bd67d4.png"},290:function(t,a,s){t.exports=s.p+"assets/img/gzip2.ab7a2dab.png"},291:function(t,a,s){t.exports=s.p+"assets/img/webpack-bundle-analyzer.ebc4ca21.gif"},292:function(t,a,s){t.exports=s.p+"assets/img/js-cost.d58178c5.png"},293:function(t,a,s){t.exports=s.p+"assets/img/longtask.c0388c89.png"},308:function(t,a,s){"use strict";s.r(a);var e=s(22),n=Object(e.a)({},function(){var t=this,a=t.$createElement,e=t._self._c||a;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("h1",{attrs:{id:"javascript"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#javascript","aria-hidden":"true"}},[t._v("#")]),t._v(" JavaScript")]),t._v(" "),e("p",[e("router-link",{attrs:{to:"/5-subresources/"}},[t._v("🔝 页面静态资源")])],1),t._v(" "),e("p",[t._v("随着 Web 的发展，JavaScript 从以前只承担简单的脚本功能，到现在被用于构建大型、复杂的前端应用，经历了很大的发展。这也让它在当下的前端应用中扮演了一个非常重要的角色，因此在这一节首先来看看的我们熟悉的 JavaScript。")]),t._v(" "),e("h2",{attrs:{id:"_1-减少不必要的请求"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_1-减少不必要的请求","aria-hidden":"true"}},[t._v("#")]),t._v(" 1. 减少不必要的请求")]),t._v(" "),e("p",[t._v("在进行 JavaScript 优化时，我们还是秉承总体思路，首先就是减少不必要的请求。")]),t._v(" "),e("h3",{attrs:{id:"_1-1-代码拆分（code-split）与按需加载"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_1-1-代码拆分（code-split）与按需加载","aria-hidden":"true"}},[t._v("#")]),t._v(" 1.1. 代码拆分（code split）与按需加载")]),t._v(" "),e("p",[t._v("相信熟练使用 webpack 的同学对这一特性都不陌生。")]),t._v(" "),e("p",[t._v("虽然整体应用的代码非常多，但是很多时候，我们在访问一个页面时，并不需要把其他页面的组件也全部加载过来，完全可以等到访问其他页面时，再按需去动态加载。核心思路如下所示：")]),t._v(" "),e("div",{staticClass:"language-JavaScript line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-javascript"}},[e("code",[t._v("document"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("getElementById")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'btn'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("addEventListener")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'click'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("e")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 在这里加载 chat 组件相关资源 chat.js")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" script "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" document"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("createElement")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'script'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    script"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("src "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'/static/js/chat.js'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    document"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("getElementsByTagName")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'head'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("appendChild")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("script"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br"),e("span",{staticClass:"line-number"},[t._v("5")]),e("br"),e("span",{staticClass:"line-number"},[t._v("6")]),e("br")])]),e("p",[t._v("在按钮点击的监听函数中，我动态添加了 "),e("code",[t._v("<script>")]),t._v(" 元素。这样就可以实现在点击按钮时，才加载对应的 JavaScript 脚本。")]),t._v(" "),e("p",[t._v("代码拆分一般会配合构建工具一起使用。以 webpack 为例，在日常使用时，最常见的方式就是通过 "),e("a",{attrs:{href:"https://github.com/tc39/proposal-dynamic-import",target:"_blank",rel:"noopener noreferrer"}},[t._v("dynamic import"),e("OutboundLink")],1),e("sup",[t._v("[1]")]),t._v(" 来告诉 webpack 去做代码拆分。webpack 编译时会进行语法分析，之后遇到 dynamic import 就会认为这个模块是需要动态加载的。相应的，其子资源也会被如此处理（除非被其他非动态模块也引用了）。")]),t._v(" "),e("p",[t._v("在 webpack 中使用代码拆分最常见的一个场景是基于路由的代码拆分。目前很多前端应用都在使用 SPA（单页面应用）形式，或者 SPA 与 MPA（多页面应用）的结合体，这就会涉及到前端路由。而页面间的业务差异也让基于路由的代码拆分成为一个最佳实践。想了解如何在 react-router v4 中实现路由级别的代码拆分，可以看"),e("a",{attrs:{href:"https://www.jianshu.com/p/547aa7b92d8c",target:"_blank",rel:"noopener noreferrer"}},[t._v("这篇文章"),e("OutboundLink")],1),e("sup",[t._v("[2]")]),t._v("。")]),t._v(" "),e("p",[t._v("当然，如果你不使用 webpack 之类的构建工具，你也可以选择一个 AMD 模块加载器（例如 "),e("a",{attrs:{href:"https://requirejs.org/",target:"_blank",rel:"noopener noreferrer"}},[t._v("RequireJS"),e("OutboundLink")],1),t._v("）来实现前端运行时上的异步依赖加载。")]),t._v(" "),e("h3",{attrs:{id:"_1-2-代码合并"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_1-2-代码合并","aria-hidden":"true"}},[t._v("#")]),t._v(" 1.2. 代码合并")]),t._v(" "),e("p",[t._v("我们在总体思路里有提到，减少请求的一个方法就是合并资源。试想一个极端情况：我们现在不对 node_modules 中的代码进行打包合并，那么当我们请求一个脚本之前将可能会并发请求数十甚至上百个依赖的脚本库。同域名下的并发请求数过高会导致请求排队，同时还可能受到 TCP/IP 慢启动的影响。")]),t._v(" "),e("p",[t._v("当然，在很多流行的构建工具中（webpack/Rollup/Parcel），是默认会帮你把依赖打包到一起的。不过当你使用其他一些工具时，就要注意了。例如使用 "),e("a",{attrs:{href:"https://fis.baidu.com/fis3/docs/pack.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("FIS3"),e("OutboundLink")],1),t._v(" 时，就需要通过配置声明，将一些 common 库或 npm 依赖进行打包合并。又或者使用 Gulp 这样的工具，也需要注意进行打包。")]),t._v(" "),e("p",[t._v("总之，千万不要让你的碎文件散落一地。")]),t._v(" "),e("h2",{attrs:{id:"_2-减少包体大小"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_2-减少包体大小","aria-hidden":"true"}},[t._v("#")]),t._v(" 2. 减少包体大小")]),t._v(" "),e("h3",{attrs:{id:"_2-1-代码压缩"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_2-1-代码压缩","aria-hidden":"true"}},[t._v("#")]),t._v(" 2.1. 代码压缩")]),t._v(" "),e("p",[t._v("JavaScript 代码压缩比较常见的做法就是使用 "),e("a",{attrs:{href:"http://lisperator.net/uglifyjs/",target:"_blank",rel:"noopener noreferrer"}},[t._v("UglifyJS"),e("OutboundLink")],1),t._v(" 做源码级别的压缩。它会通过将变量替换为短命名、去掉多余的换行符等方式，在尽量不改变源码逻辑的情况下，做到代码体积的压缩。基本已经成为了前端开发的标配。在 webpack 的 production 模式下是默认开启的；而在 Gulp 这样的任务流管理工具上也有 "),e("a",{attrs:{href:"https://github.com/terinjokes/gulp-uglify",target:"_blank",rel:"noopener noreferrer"}},[t._v("gulp-uglify"),e("OutboundLink")],1),t._v(" 这样的功能插件。")]),t._v(" "),e("p",[t._v("另一个代码压缩的常用手段是使用一些文本压缩算法，gzip 就是常用的一种方式。")]),t._v(" "),e("p",[e("img",{attrs:{src:s(289),alt:"响应头"}})]),t._v(" "),e("p",[t._v("上图中响应头的 "),e("code",[t._v("Content-Encoding")]),t._v(" 表示其使用了 gzip。")]),t._v(" "),e("p",[e("img",{attrs:{src:s(290),alt:"压缩效果"}})]),t._v(" "),e("p",[t._v("深色的数字表示压缩后的大小为 22.0KB，浅色部分表示压缩前的大小为 91.9KB，压缩比还是挺大的，很有效果。一般服务器都会内置相应模块来进行 gzip 处理，不需要我们单独编写压缩算法模块。例如在 Nginx 中就包含了 "),e("a",{attrs:{href:"http://nginx.org/en/docs/http/ngx_http_gzip_module.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("ngx_http_gzip_module"),e("OutboundLink")],1),e("sup",[t._v("[3]")]),t._v(" 模块，通过简单的配置就可以开启。")]),t._v(" "),e("div",{staticClass:"language-nginx line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-nginx"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("gzip")]),t._v("            on"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("gzip_min_length")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("1000")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("gzip_comp_level")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("6")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("gzip_types")]),t._v("      application"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("javascript application"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("x"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("javascript text"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("javascript"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br")])]),e("h3",{attrs:{id:"_2-2-tree-shaking"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_2-2-tree-shaking","aria-hidden":"true"}},[t._v("#")]),t._v(" 2.2. Tree Shaking")]),t._v(" "),e("p",[t._v("Tree Shaking 最早进入到前端的视线主要是因为 Rollup。后来在 webpack 中也被实现了。其本质是通过检测源码中不会被使用到的部分，将其删除，从而减小代码的体积。例如：")]),t._v(" "),e("div",{staticClass:"language-JavaScript line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-javascript"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 模块 A")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("export")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("add")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("a"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" b")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" a "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" b"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("export")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("minus")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("a"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" b")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" a "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" b"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br"),e("span",{staticClass:"line-number"},[t._v("5")]),e("br"),e("span",{staticClass:"line-number"},[t._v("6")]),e("br"),e("span",{staticClass:"line-number"},[t._v("7")]),e("br"),e("span",{staticClass:"line-number"},[t._v("8")]),e("br")])]),e("div",{staticClass:"language-JavaScript line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-javascript"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 模块 B")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("add"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'module.A.js'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nconsole"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("add")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br")])]),e("p",[t._v("可以看到，模块 B 引用了模块 A，但是只使用了 "),e("code",[t._v("add")]),t._v(" 方法。因此 "),e("code",[t._v("minus")]),t._v(" 方法相当于成为了 Dead Code，将它打包进去没有意义，该方法是永远不会被使用到的。")]),t._v(" "),e("p",[t._v("注意，我在上面的代码中使用了 ESM 规范的模块语法，而没有使用 CommonJS。这主要是由于 Tree Shaking 算是一种静态分析，而 ESM 本身是一种的静态的模块化规范，所有依赖可以在编译期确定。如果想要更好得在 webpack 中使用，可以在查看其"),e("a",{attrs:{href:"https://webpack.js.org/guides/tree-shaking/",target:"_blank",rel:"noopener noreferrer"}},[t._v("官网上的这部分内容"),e("OutboundLink")],1),e("sup",[t._v("[4]")]),t._v("。关于 Tree Shaking 的介绍也可以"),e("a",{attrs:{href:"https://juejin.im/post/5a4dc842518825698e7279a9",target:"_blank",rel:"noopener noreferrer"}},[t._v("从这里了解下"),e("OutboundLink")],1),e("sup",[t._v("[5]")]),t._v("。")]),t._v(" "),e("p",[t._v("注意，刚才说了 Tree Shaking 非常依赖于 ESM。像是前端流行的工具库 "),e("a",{attrs:{href:"https://lodash.com/",target:"_blank",rel:"noopener noreferrer"}},[t._v("lodash"),e("OutboundLink")],1),t._v(" 一般直接安装的版本是非 ESM 的，为了支持 Tree Shaking，我们需要去安装它的 ESM 版本 —— "),e("a",{attrs:{href:"https://www.npmjs.com/package/lodash-es",target:"_blank",rel:"noopener noreferrer"}},[t._v("lodash-es"),e("OutboundLink")],1),t._v(" 来"),e("a",{attrs:{href:"https://www.zhihu.com/question/333421533/answer/764963886",target:"_blank",rel:"noopener noreferrer"}},[t._v("实现 Tree Shaking"),e("OutboundLink")],1),e("sup",[t._v("[6]")]),t._v("。")]),t._v(" "),e("p",[t._v("此外，Chrome DevTools 也可以帮助你查看加载的 "),e("a",{attrs:{href:"https://developers.google.com/web/updates/2017/04/devtools-release-notes#coverage",target:"_blank",rel:"noopener noreferrer"}},[t._v("JavaScript 代码的使用覆盖率"),e("OutboundLink")],1),e("sup",[t._v("[7]")]),t._v("。")]),t._v(" "),e("h3",{attrs:{id:"_2-3-优化-polyfill-的使用"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_2-3-优化-polyfill-的使用","aria-hidden":"true"}},[t._v("#")]),t._v(" 2.3. 优化 polyfill 的使用")]),t._v(" "),e("p",[t._v("前端技术的一大特点就是需要考虑兼容性。为了让大家能顺畅地使用浏览器的新特性，一些程序员们开发了新特性对应的 polyfill，用于在非兼容浏览器上也能使用新特性的 API。后续升级不用改动业务代码，只需要删除相应的 polyfill 即可。")]),t._v(" "),e("p",[t._v("这种舒适的开发体验也让 polyfill 成为了很多项目中不可或缺的一份子。然而 polyfill 也是有代价的，它增加了代码的体积。毕竟 polyfill 也是 JavaScript 写的，不是内置在浏览器中，引入的越多，代码体积也越大。所以，只加载真正所需的 polyfill 将会帮助你减小代码体积。")]),t._v(" "),e("p",[t._v("首先，不是每个业务的兼容性要求都一样。因此，按你业务的场景来确定引入哪些 polyfill 是最合适的。然而，特性千千万，手动 import 或者添加 Babel Transformer 显然是一件成本极高的事。针对这点，我们可以通过 "),e("a",{attrs:{href:"https://github.com/browserslist/browserslist",target:"_blank",rel:"noopener noreferrer"}},[t._v("browserslist"),e("OutboundLink")],1),t._v(" 来帮忙，许多前端工具（"),e("a",{attrs:{href:"https://babeljs.io/docs/en/next/babel-preset-env.html#how-does-it-work",target:"_blank",rel:"noopener noreferrer"}},[t._v("babel-preset-env"),e("OutboundLink")],1),t._v("/"),e("a",{attrs:{href:"https://github.com/postcss/autoprefixer#browsers",target:"_blank",rel:"noopener noreferrer"}},[t._v("autoprefixer"),e("OutboundLink")],1),t._v("/"),e("a",{attrs:{href:"https://github.com/amilajack/eslint-plugin-compat#3-configure-target-browsers",target:"_blank",rel:"noopener noreferrer"}},[t._v("eslint-plugin-compat"),e("OutboundLink")],1),t._v("）都依赖于它。使用方式可以"),e("a",{attrs:{href:"https://babeljs.io/docs/en/next/babel-preset-env.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("看这里"),e("OutboundLink")],1),t._v("。")]),t._v(" "),e("p",[t._v("其次，在 Chrome Dev Summit 2018 上还介绍了一种 "),e("a",{attrs:{href:"https://youtu.be/reztLS3vomE?t=1254",target:"_blank",rel:"noopener noreferrer"}},[t._v("Differential Serving"),e("OutboundLink")],1),e("sup",[t._v("[8]")]),t._v(" 的技术，通过浏览器原生模块化 API 来尽量避免加载无用 polyfill。")]),t._v(" "),e("div",{staticClass:"language-HTML line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-html"}},[e("code",[e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("script")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("type")]),e("span",{pre:!0,attrs:{class:"token attr-value"}},[e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("module"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),t._v(" "),e("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("src")]),e("span",{pre:!0,attrs:{class:"token attr-value"}},[e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("main.mjs"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),e("span",{pre:!0,attrs:{class:"token script"}}),e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("script")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("script")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("nomodule")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("src")]),e("span",{pre:!0,attrs:{class:"token attr-value"}},[e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("legacy.js"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),e("span",{pre:!0,attrs:{class:"token script"}}),e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("script")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br")])]),e("p",[t._v("这样，在能够处理 "),e("code",[t._v("module")]),t._v(" 属性的浏览器（具有很多新特性）上就只需加载 "),e("code",[t._v("main.mjs")]),t._v("（不包含 polyfill），而在老式浏览器下，则会加载 "),e("code",[t._v("legacy.js")]),t._v("（包含 polyfill）。")]),t._v(" "),e("p",[t._v("最后，其实在理想上，polyfill 最优的使用方式应该是根据浏览器特性来分发，同一个项目在不同的浏览器，会加载不同的 polyfill 文件。例如 "),e("a",{attrs:{href:"https://polyfill.io/v3/",target:"_blank",rel:"noopener noreferrer"}},[t._v("Polyfill.io"),e("OutboundLink")],1),t._v(" 就会根据请求头中的客户端特性与所需的 API 特性来按实际情况返回必须的 polyfill 集合。")]),t._v(" "),e("h3",{attrs:{id:"_2-4-webpack"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_2-4-webpack","aria-hidden":"true"}},[t._v("#")]),t._v(" 2.4. webpack")]),t._v(" "),e("p",[t._v("webpack 现在已经成为很多前端应用的构建工具，因此这里单独将其列了出来。我们可以通过 "),e("a",{attrs:{href:"https://github.com/webpack-contrib/webpack-bundle-analyzer",target:"_blank",rel:"noopener noreferrer"}},[t._v("webpack-bundle-analyzer"),e("OutboundLink")],1),t._v(" 这个工具来查看打包代码里面各个模块的占用大小。")]),t._v(" "),e("p",[e("img",{attrs:{src:s(291),alt:"webpack-bundle-analyzer"}})]),t._v(" "),e("p",[t._v("很多时候，打包体积过大主要是因为引入了不合适的包，对于如何优化依赖包的引入，这里有"),e("a",{attrs:{href:"https://github.com/GoogleChromeLabs/webpack-libs-optimizations",target:"_blank",rel:"noopener noreferrer"}},[t._v("一些建议可以帮助你减小 bundle 的体积"),e("OutboundLink")],1),e("sup",[t._v("[9]")]),t._v("。")]),t._v(" "),e("h2",{attrs:{id:"_3-解析与执行"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_3-解析与执行","aria-hidden":"true"}},[t._v("#")]),t._v(" 3. 解析与执行")]),t._v(" "),e("p",[t._v("除了 JavaScript 下载需要耗时外，脚本的解析与执行也是会消耗时间的。")]),t._v(" "),e("h3",{attrs:{id:"_3-1-javascript-的解析耗时"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_3-1-javascript-的解析耗时","aria-hidden":"true"}},[t._v("#")]),t._v(" 3.1. JavaScript 的解析耗时")]),t._v(" "),e("p",[t._v("很多情况下，我们会忽略 JavaScript 文件的解析。一个 JavaScript 文件，即使内部没有所谓的“立即执行函数”，JavaScript 引擎也是需要对其进行解析和编译的。")]),t._v(" "),e("p",[e("img",{attrs:{src:s(292),alt:"js 处理"}})]),t._v(" "),e("p",[t._v("从"),e("a",{attrs:{href:"https://twitter.com/addyosmani/status/830126731470073857",target:"_blank",rel:"noopener noreferrer"}},[t._v("上图"),e("OutboundLink")],1),t._v("可以看出，解析与编译消耗了好几百毫秒。所以换一个角度来说，删除不必要的代码，对于降低 Parse 与 Compile 的负载也是很有帮助的。")]),t._v(" "),e("p",[t._v("同时，我们从前一节已经知道，JavaScript 的解析、编译和执行会阻塞页面解析，延迟用户交互。所以有时候，加载同样字节数的 JavaScript 对性能的影响可能会高于图片，因为图片的处理可以放在其他线程中并行执行。")]),t._v(" "),e("h3",{attrs:{id:"_3-2-避免-long-task"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_3-2-避免-long-task","aria-hidden":"true"}},[t._v("#")]),t._v(" 3.2. 避免 Long Task")]),t._v(" "),e("p",[t._v("对于一些单页应用，在加载完核心的 JavaScript 资源后，可能会需要执行大量的逻辑。如果处理不好，可能会出现 JavaScript 线程长时间执行而阻塞主线程的情况。")]),t._v(" "),e("p",[e("img",{attrs:{src:s(293),alt:"long task"}})]),t._v(" "),e("p",[t._v("例如在上图中，帧率下降明显的地方出现了 Long Task，伴随着的是有一段超过 700 ms 的脚本执行时间。而性能指标 FCP 与 DCL 处于其后，一定程度上可以认为，这个 Long Task 阻塞了主线程并拖慢了页面的加载时间，严重影响了前端性能与体验。")]),t._v(" "),e("p",[t._v("想要了解更多关于 Long Task 的内容，可以看看 "),e("a",{attrs:{href:"https://w3c.github.io/longtasks/",target:"_blank",rel:"noopener noreferrer"}},[t._v("Long Task 相关的标准"),e("OutboundLink")],1),e("sup",[t._v("[10]")]),t._v("。")]),t._v(" "),e("h3",{attrs:{id:"_3-3-是否真的需要框架"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_3-3-是否真的需要框架","aria-hidden":"true"}},[t._v("#")]),t._v(" 3.3. 是否真的需要框架")]),t._v(" "),e("p",[t._v("相信如果现在问大家，我们是否需要 React、Vue、Angular 或其他前端框架（库），大概率是肯定的。")]),t._v(" "),e("p",[t._v("但是我们可以换个角度来思考这个问题。类库/框架帮我们解决的问题之一是快速开发与后续维护代码，很多时候，类库/框架的开发者是需要在可维护性、易用性和性能上做取舍的。对于一个复杂的整站应用，使用框架给你的既定编程范式将会在各个层面提升你工作的质量。但是，对于某些页面，我们是否可以反其道行之呢？")]),t._v(" "),e("p",[t._v("例如产品经理反馈，咱们的落地页加载太慢了，用户容易流失。这时候你会开始优化性能，用上这次「性能之旅」里的各种措施。但你有没有考虑过，对于像落地页这样的、类似静态页的页面，是不是可以“返璞归真”？")]),t._v(" "),e("p",[t._v("也许你使用了 React 技术栈 —— 你加载了 React、Redux、React-Redux、一堆 Reducers…… 好吧，整个 JavaScript 可能快 1MB 了。更重要的是，这个页面如果是用于拉新的，这也代表着访问者并没有缓存可以用。好吧，为了一个静态页（或者还有一些非常简单的表单交互），用户付出了高额的成本，而原本这只需要 50 行不到的代码。所以有时候考虑使用原生 JavaScript 来实现它也是一种策略。Netflix 有一篇文章介绍了他们是"),e("a",{attrs:{href:"https://medium.com/dev-channel/a-netflix-web-performance-case-study-c0bcde26a9d9",target:"_blank",rel:"noopener noreferrer"}},[t._v("如何通过这种方式大幅缩减加载与操作响应时间的"),e("OutboundLink")],1),e("sup",[t._v("[11]")]),t._v("。")]),t._v(" "),e("p",[t._v("当然，还是强调一下，并不是说不要使用框架/类库，只是希望大家不要拘泥于某个思维定式。做工具的主人，而不是工具的“奴隶”。")]),t._v(" "),e("h3",{attrs:{id:"_3-4-针对代码的优化"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_3-4-针对代码的优化","aria-hidden":"true"}},[t._v("#")]),t._v(" 3.4. 针对代码的优化")]),t._v(" "),e("blockquote",[e("p",[e("font",{staticStyle:{color:"#d65"}},[t._v("请注意，截止目前（2019.08）以下内容不建议在生产环境中使用。")])],1)]),t._v(" "),e("p",[t._v("还有一种优化思路是把代码变为最优状态。它其实算是一种编译优化。在一些编译型的静态语言上（例如 C++），通过编译器进行一些优化非常常见。")]),t._v(" "),e("p",[t._v("这里要提到的就是 facebook 推出的 "),e("a",{attrs:{href:"https://prepack.io/",target:"_blank",rel:"noopener noreferrer"}},[t._v("Prepack"),e("OutboundLink")],1),t._v("。例如下面一段代码：")]),t._v(" "),e("div",{staticClass:"language-JavaScript line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-javascript"}},[e("code",[e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("hello")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'hello'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("world")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'world'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    global"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("s "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("hello")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("' '")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("world")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br"),e("span",{staticClass:"line-number"},[t._v("5")]),e("br")])]),e("p",[t._v("可以优化为：")]),t._v(" "),e("div",{staticClass:"language-JavaScript line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-javascript"}},[e("code",[t._v("s "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'hello world'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br")])]),e("p",[t._v("不过很多时候，代码体积和运行性能是会有矛盾的。同时 Prepack 也还不够成熟，所以不建议在生产环境中使用。")]),t._v(" "),e("h2",{attrs:{id:"_4-缓存"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_4-缓存","aria-hidden":"true"}},[t._v("#")]),t._v(" 4. 缓存")]),t._v(" "),e("p",[t._v("JavaScript 部分的缓存与我们在第一部分里提到的缓存基本一致，如果你记不太清了，"),e("router-link",{attrs:{to:"/1-cache/"}},[t._v("可以回到咱们的第一站")]),t._v("。")],1),t._v(" "),e("h3",{attrs:{id:"_4-1-发布与部署"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_4-1-发布与部署","aria-hidden":"true"}},[t._v("#")]),t._v(" 4.1. 发布与部署")]),t._v(" "),e("p",[t._v("这里简单提一下：大多数情况下，我们对于 JavaScript 与 CSS 这样的静态资源，都会启动 HTTP 缓存。当然，可能使用强缓存，也可能使用协商缓存。当我们在强缓存机制上发布了更新的时候，如何让浏览器弃用缓存，请求新的资源呢？")]),t._v(" "),e("p",[t._v("一般会有一套配合的方式：首先在文件名中包含文件内容的 Hash，内容修改后，文件名就会变化；同时，设置不对页面进行强缓存，这样对于内容更新的静态资源，由于 uri 变了，肯定不会再走缓存，而没有变动的资源则仍然可以使用缓存。")]),t._v(" "),e("p",[t._v("上面说的主要涉及前端资源的发布和部署，详细可以看"),e("a",{attrs:{href:"https://www.zhihu.com/question/20790576/answer/32602154",target:"_blank",rel:"noopener noreferrer"}},[t._v("这篇内容"),e("OutboundLink")],1),e("sup",[t._v("[12]")]),t._v("，这里就不展开了。")]),t._v(" "),e("h3",{attrs:{id:"_4-2-将基础库代码打包合并"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_4-2-将基础库代码打包合并","aria-hidden":"true"}},[t._v("#")]),t._v(" 4.2. 将基础库代码打包合并")]),t._v(" "),e("p",[t._v("为了更好利用缓存，我们一般会把不容易变化的部分单独抽取出来。例如一个 React 技术栈的项目，可能会将 React、Redux、React-Router 这类基础库单独打包出一个文件。")]),t._v(" "),e("p",[t._v("这样做的优点在于，由于基础库被单独打包在一起了，即使业务代码经常变动，也不会导致整个缓存失效。基础框架/库、项目中的 common、util 仍然可以利用缓存，不会每次发布新版都会让用户花费不必要的带宽重新下载基础库。")]),t._v(" "),e("p",[t._v("所以一种常见的策略就是"),e("a",{attrs:{href:"https://juejin.im/post/5aed037b6fb9a07aa047e1e1",target:"_blank",rel:"noopener noreferrer"}},[t._v("将基础库这种 Cache 周期较长的内容单独打包在一起"),e("OutboundLink")],1),t._v("，利用缓存减少新版本发布后用户的访问速度。这种方法本质上是将缓存周期不同的内容分离了，隔离了变化。")]),t._v(" "),e("p",[t._v("webpack 在 v3.x 以及之前，可以通过 CommonChunkPlugin 来分离一些公共库。而升级到 v4.x 之后有了一个新的配置项 "),e("code",[t._v("optimization.splitChunks")]),t._v(":")]),t._v(" "),e("div",{staticClass:"language-JavaScript line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-javascript"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// webpack.config.js")]),t._v("\nmodule"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("exports "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//...")]),t._v("\n    optimization"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        splitChunks"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            chunks"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'all'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n            minChunks"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n            cacheGroups"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n                commons"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n                    minChunks"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n                    automaticNamePrefix"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'commons'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n                    test"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token regex"}},[t._v("/[\\\\/]node_modules[\\\\/]react|redux|react-redux/")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n                    chunks"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'all'")]),t._v("\n                "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n            "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n        "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br"),e("span",{staticClass:"line-number"},[t._v("5")]),e("br"),e("span",{staticClass:"line-number"},[t._v("6")]),e("br"),e("span",{staticClass:"line-number"},[t._v("7")]),e("br"),e("span",{staticClass:"line-number"},[t._v("8")]),e("br"),e("span",{staticClass:"line-number"},[t._v("9")]),e("br"),e("span",{staticClass:"line-number"},[t._v("10")]),e("br"),e("span",{staticClass:"line-number"},[t._v("11")]),e("br"),e("span",{staticClass:"line-number"},[t._v("12")]),e("br"),e("span",{staticClass:"line-number"},[t._v("13")]),e("br"),e("span",{staticClass:"line-number"},[t._v("14")]),e("br"),e("span",{staticClass:"line-number"},[t._v("15")]),e("br"),e("span",{staticClass:"line-number"},[t._v("16")]),e("br"),e("span",{staticClass:"line-number"},[t._v("17")]),e("br"),e("span",{staticClass:"line-number"},[t._v("18")]),e("br")])]),e("h3",{attrs:{id:"_4-3-减少-webpack-编译不当带来的缓存失效"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_4-3-减少-webpack-编译不当带来的缓存失效","aria-hidden":"true"}},[t._v("#")]),t._v(" 4.3. 减少 webpack 编译不当带来的缓存失效")]),t._v(" "),e("p",[t._v("由于 webpack 已经成为前端主流的构建工具，因此这里再特别提一下使用 webpack 时的一些注意点，减少一些不必要的缓存失效。")]),t._v(" "),e("p",[t._v("我们知道，对于每个模块 webpack 都会分配一个唯一的模块 ID，一般情况下 webpack 会使用自增 ID。这就可能导致一个问题：一些模块虽然它们的代码没有变化，但由于增/删了新的其他模块，导致后续所有的模块 ID 都变更了，文件 MD5 也就变化了。另一个问题在于，webpack 的入口文件除了包含它的 runtime、业务模块代码，同时还有一个用于异步加载的小型 manifest，任何一个模块的变化，最后必然会传导到入口文件。这些都会使得网站发布后，没有改动源码的资源也会缓存失效。")]),t._v(" "),e("p",[t._v("规避这些问题有一些常用的方式。")]),t._v(" "),e("h4",{attrs:{id:"_4-3-1-使用-hash-来替代自增-id"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_4-3-1-使用-hash-来替代自增-id","aria-hidden":"true"}},[t._v("#")]),t._v(" 4.3.1. 使用 Hash 来替代自增 ID")]),t._v(" "),e("p",[t._v("你可以使用 "),e("a",{attrs:{href:"https://webpack.js.org/plugins/hashed-module-ids-plugin/",target:"_blank",rel:"noopener noreferrer"}},[t._v("HashedModuleIdsPlugin 插件"),e("OutboundLink")],1),t._v("，它会根据模块的相对路径来计算 Hash 值。当然，你也可以使用 webpack 提供的 "),e("a",{attrs:{href:"https://webpack.js.org/configuration/optimization/#optimizationmoduleids",target:"_blank",rel:"noopener noreferrer"}},[e("code",[t._v("optimization.moduleIds")]),e("OutboundLink")],1),t._v("，将其设置为 "),e("code",[t._v("hash")]),t._v("，或者选择其他合适的方式。")]),t._v(" "),e("h4",{attrs:{id:"_4-3-2-将-runtime-chunk-单独拆分出来"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_4-3-2-将-runtime-chunk-单独拆分出来","aria-hidden":"true"}},[t._v("#")]),t._v(" 4.3.2. 将 runtime chunk 单独拆分出来")]),t._v(" "),e("p",[t._v("通过 "),e("a",{attrs:{href:"https://webpack.js.org/configuration/optimization/#optimizationruntimechunk",target:"_blank",rel:"noopener noreferrer"}},[e("code",[t._v("optimization.runtimeChunk")]),e("OutboundLink")],1),t._v(" 配置可以让 webpack 把包含 manifest 的 runtime 部分单独分离出来，这样就可以尽可能限制变动影响的文件范围。")]),t._v(" "),e("div",{staticClass:"language-JavaScript line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-javascript"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// webpack.config.js")]),t._v("\nmodule"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("exports "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//...")]),t._v("\n    optimization"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        runtimeChunk"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            name"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'runtime'")]),t._v("\n        "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br"),e("span",{staticClass:"line-number"},[t._v("5")]),e("br"),e("span",{staticClass:"line-number"},[t._v("6")]),e("br"),e("span",{staticClass:"line-number"},[t._v("7")]),e("br"),e("span",{staticClass:"line-number"},[t._v("8")]),e("br"),e("span",{staticClass:"line-number"},[t._v("9")]),e("br")])]),e("blockquote",[e("p",[t._v("如果你对 webpack 模块化 runtime 运行的原理不太了解，可以看看"),e("a",{attrs:{href:"https://juejin.im/post/5b82ac82f265da431d0e6d25",target:"_blank",rel:"noopener noreferrer"}},[t._v("这篇文章"),e("OutboundLink")],1),e("sup",[t._v("[13]")]),t._v("。")])]),t._v(" "),e("h4",{attrs:{id:"_4-3-3-使用-records"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_4-3-3-使用-records","aria-hidden":"true"}},[t._v("#")]),t._v(" 4.3.3. 使用 records")]),t._v(" "),e("p",[t._v("你可以通过 "),e("a",{attrs:{href:"https://webpack.js.org/configuration/other-options/#recordspath",target:"_blank",rel:"noopener noreferrer"}},[e("code",[t._v("recordsPath")]),e("OutboundLink")],1),t._v(" 配置来让 webpack 产出一个包含模块信息记录的 JSON 文件，其中包含了一些模块标识的信息，可以用于之后的编译。这样在后续的打包编译时，对于被拆分出来的 Bundle，webpack 就可以根据 records 中的信息来尽量避免破坏缓存。")]),t._v(" "),e("div",{staticClass:"language-JavaScript line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-javascript"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// webpack.config.js")]),t._v("\nmodule"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("exports "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//...")]),t._v("\n  recordsPath"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" path"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("join")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("__dirname"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'records.json'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br"),e("span",{staticClass:"line-number"},[t._v("5")]),e("br")])]),e("p",[t._v("如果对上述避免或减少缓存失效的方法感兴趣，也可以再读一读"),e("a",{attrs:{href:"https://survivejs.com/webpack/optimizing/separating-manifest/#using-records",target:"_blank",rel:"noopener noreferrer"}},[t._v("这篇文章"),e("OutboundLink")],1),e("sup",[t._v("14")]),t._v("。在 webpack v5.x 的计划中，也有"),e("a",{attrs:{href:"https://github.com/webpack/changelog-v5/blob/master/README.md#deterministic-chunk-and-module-ids",target:"_blank",rel:"noopener noreferrer"}},[t._v("针对 module 和 chunk ID 的一些工作计划来提高长期缓存"),e("OutboundLink")],1),t._v("。")]),t._v(" "),e("hr"),t._v(" "),e("p",[t._v("这一部分就到这里了，我们基于减少不必要的请求、减少包体大小、降低解析与执行消耗、利用缓存这四个基本思想，展开去看了 JavaScript 资源的性能优化措施有哪些。")]),t._v(" "),e("p",[t._v("下面我们就会进入前端三驾马车中的 CSS 部分了！")]),t._v(" "),e("p",[e("router-link",{attrs:{to:"/5-subresources/css.html"}},[t._v("下一站 - CSS 🔜")])],1),t._v(" "),e("hr"),t._v(" "),e("h2",{attrs:{id:"参考资料"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#参考资料","aria-hidden":"true"}},[t._v("#")]),t._v(" 参考资料")]),t._v(" "),e("ol",[e("li",[e("a",{attrs:{href:"https://github.com/tc39/proposal-dynamic-import",target:"_blank",rel:"noopener noreferrer"}},[t._v("Proposal Dynamic Import"),e("OutboundLink")],1)]),t._v(" "),e("li",[e("a",{attrs:{href:"https://www.jianshu.com/p/547aa7b92d8c",target:"_blank",rel:"noopener noreferrer"}},[t._v("在 react-router4 中进行代码拆分"),e("OutboundLink")],1)]),t._v(" "),e("li",[e("a",{attrs:{href:"http://nginx.org/en/docs/http/ngx_http_gzip_module.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("Module ngx_http_gzip_module"),e("OutboundLink")],1)]),t._v(" "),e("li",[e("a",{attrs:{href:"https://webpack.js.org/guides/tree-shaking/",target:"_blank",rel:"noopener noreferrer"}},[t._v("Tree Shaking - webpack"),e("OutboundLink")],1)]),t._v(" "),e("li",[e("a",{attrs:{href:"https://juejin.im/post/5a4dc842518825698e7279a9",target:"_blank",rel:"noopener noreferrer"}},[t._v("Tree Shaking 性能优化实践 - 原理篇"),e("OutboundLink")],1)]),t._v(" "),e("li",[e("a",{attrs:{href:"https://www.zhihu.com/question/333421533/answer/764963886",target:"_blank",rel:"noopener noreferrer"}},[t._v("Tree Shaking for Lodash"),e("OutboundLink")],1)]),t._v(" "),e("li",[e("a",{attrs:{href:"https://developers.google.com/web/updates/2017/04/devtools-release-notes#coverage",target:"_blank",rel:"noopener noreferrer"}},[t._v("CSS and JS code coverage - Chrome DevTools"),e("OutboundLink")],1)]),t._v(" "),e("li",[e("a",{attrs:{href:"https://youtu.be/reztLS3vomE?t=1254",target:"_blank",rel:"noopener noreferrer"}},[t._v("Chrome Dev Summit 2018"),e("OutboundLink")],1)]),t._v(" "),e("li",[e("a",{attrs:{href:"https://github.com/GoogleChromeLabs/webpack-libs-optimizations",target:"_blank",rel:"noopener noreferrer"}},[t._v("Optimize your libraries with webpack"),e("OutboundLink")],1)]),t._v(" "),e("li",[e("a",{attrs:{href:"https://w3c.github.io/longtasks/",target:"_blank",rel:"noopener noreferrer"}},[t._v("Long Tasks API 1"),e("OutboundLink")],1)]),t._v(" "),e("li",[e("a",{attrs:{href:"https://medium.com/dev-channel/a-netflix-web-performance-case-study-c0bcde26a9d9",target:"_blank",rel:"noopener noreferrer"}},[t._v("A Netflix Web Performance Case Study"),e("OutboundLink")],1)]),t._v(" "),e("li",[e("a",{attrs:{href:"https://www.zhihu.com/question/20790576/answer/32602154",target:"_blank",rel:"noopener noreferrer"}},[t._v("大公司里怎样开发和部署前端代码？"),e("OutboundLink")],1)]),t._v(" "),e("li",[e("a",{attrs:{href:"https://juejin.im/post/5b82ac82f265da431d0e6d25",target:"_blank",rel:"noopener noreferrer"}},[t._v("webpack进阶：前端运行时的模块化设计与实现"),e("OutboundLink")],1)]),t._v(" "),e("li",[e("a",{attrs:{href:"https://survivejs.com/webpack/optimizing/separating-manifest/#using-records",target:"_blank",rel:"noopener noreferrer"}},[t._v("Separating a Manifest"),e("OutboundLink")],1)]),t._v(" "),e("li",[e("a",{attrs:{href:"https://v8.dev/blog/cost-of-javascript-2019",target:"_blank",rel:"noopener noreferrer"}},[t._v("The cost of JavaScript in 2019"),e("OutboundLink")],1)]),t._v(" "),e("li",[e("a",{attrs:{href:"https://juejin.im/post/5d1f27285188252f275fdbb6",target:"_blank",rel:"noopener noreferrer"}},[t._v("[译] 2019 年的 JavaScript 性能"),e("OutboundLink")],1)]),t._v(" "),e("li",[e("a",{attrs:{href:"https://medium.com/webpack/webpack-4-code-splitting-chunk-graph-and-the-splitchunks-optimization-be739a861366",target:"_blank",rel:"noopener noreferrer"}},[t._v("webpack 4: Code Splitting, chunk graph and the splitChunks optimization"),e("OutboundLink")],1)]),t._v(" "),e("li",[e("a",{attrs:{href:"https://www.cnblogs.com/zhuxian8/p/7197356.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("文本压缩算法的对比和选择"),e("OutboundLink")],1)]),t._v(" "),e("li",[e("a",{attrs:{href:"https://zhuanlan.zhihu.com/p/42418273",target:"_blank",rel:"noopener noreferrer"}},[t._v("简单聊聊 GZIP 的压缩原理与日常应用"),e("OutboundLink")],1)]),t._v(" "),e("li",[e("a",{attrs:{href:"https://www.sciencedirect.com/topics/computer-science/text-compression",target:"_blank",rel:"noopener noreferrer"}},[t._v("Text Compression"),e("OutboundLink")],1)]),t._v(" "),e("li",[e("a",{attrs:{href:"https://medium.com/webpack/better-tree-shaking-with-deep-scope-analysis-a0b788c0ce77",target:"_blank",rel:"noopener noreferrer"}},[t._v("Better tree shaking with deep scope analysis"),e("OutboundLink")],1)]),t._v(" "),e("li",[e("a",{attrs:{href:"https://dev.to/goenning/how-we-reduced-our-initial-jscss-size-by-67-3ac0",target:"_blank",rel:"noopener noreferrer"}},[t._v("How we reduced our initial JS/CSS size by 67%"),e("OutboundLink")],1)])])])},[],!1,null,null,null);a.default=n.exports}}]);